version: '3.1'
services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - tasks-service-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus/prometheus.local.yml:/etc/prometheus/prometheus.yml:Z
    networks:
      - tasks-service-net
    extra_hosts:
        - "host.docker.internal:host-gateway"
    
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    networks:
      - tasks-service-net

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./docker/pgdata:/var/lib/postgresql/data/pgdata:z
    networks:
      - tasks-service-net
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go-practice
      PGDATA: /var/lib/pg_data

  jaeger:
    container_name: jaeger
    restart: always
    image: jaegertracing/all-in-one:1.39
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      - tasks-service-net

networks:
  tasks-service-net:
    driver: bridge
    name: tasks-service-net

  # kibana:
  #   build:
  #     context: kibana/
  #   container_name: kibana
  #   volumes:
  #     - ./kibana/config/:/usr/share/kibana/config:ro
  #   networks: ['elastic']
  #   depends_on:
  #     - elasticsearch
  #   restart: always
  #   mem_limit: 1g

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
  #   # build:
  #     # context: elasticsearch/
  #   container_name: elasticsearch
  #   networks: ['elastic']
  #   # volumes:
  #     # - ./elasticsearch/elastic-data:/usr/share/elasticsearch/data
  #     # - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
  #     # - ./elasticsearch/logs:/var/logs/elasticsearch:ro
  #   restart: always
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   environment:
  #     - cluster.name=es-docker
  #     - node.name=node1
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
  #     - http.host=0.0.0.0
  #     - transport.host=127.0.0.1
  #   mem_limit: 1g
  #   tty: true

  # logstash:
  #     build:
  #       context: logstash/
  #     container_name: logstash
  #     volumes:
  #       - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
  #     networks: ['elastic']
  #     ports:
  #       - "5044:5044"
  #     depends_on:
  #       - elasticsearch
  #     restart: always
  #     mem_limit: 1g
  #     environment:
  #       - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
