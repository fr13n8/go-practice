definitions:
  domain.Task:
    properties:
      ID:
        type: string
      Name:
        type: string
      Status:
        type: boolean
    type: object
  domain.TaskCreate:
    properties:
      name:
        type: string
    type: object
  domain.TaskUpdate:
    properties:
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/task:
    get:
      consumes:
      - application/json
      description: get all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Task'
            type: array
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: create task
      operationId: create-task
      parameters:
      - description: task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.TaskCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Task'
      summary: Create task
      tags:
      - tasks
  /api/v1/task/:id:
    delete:
      consumes:
      - application/json
      description: delete task by id
      operationId: delete-task-by-id
      parameters:
      - description: Task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: get task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Task'
      summary: Get a task
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: update task
      operationId: update-task
      parameters:
      - description: task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.TaskUpdate'
      - description: Task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Task'
      summary: Update task
      tags:
      - tasks
swagger: "2.0"
